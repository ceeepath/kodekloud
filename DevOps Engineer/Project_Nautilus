#Task1:a. Install git, set up any values for user.email and user.name globally and create a bare repository /opt/demo.git.
#b. There is an update hook (to block direct pushes to master branch) under /tmp on storage server itself; use the same to block direct pushes to master branch in /opt/demo.git repo.
#c. Clone /opt/demo.git repo in /usr/src/kodekloudrepos/demo directory. #d. Create a new branch xfusioncorp_demo in repo that you cloned in /usr/src/kodekloudrepos.
#e. There is a readme.md file in /tmp on storage server itself; copy that to repo, add/commit in the new branch you created, and finally push your branch to origin.
#f. Also create master branch from your branch and remember you should not be able to push to master as per hook you have set up.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Install git and carry out initial configurations using this script
#!/bin/bash
PASS=Bl@kW
#Install git
echo $PASS | sudo -S yum install git -y
#Configure global credentials
git config --global user.email "ceeepath@gmial.com"
git config --global user.name "Adekunle"
#Create directory and set ownership to natasha i.e. current user
echo $PASS | sudo -S mkdir /opt/demo.git
echo $PASS | sudo -S chown -R natasha:natasha /opt/demo.git
cd /opt/demo.git
#Initialize the directory as a bare repo as required
git init --bare
sleep 5
#Copy the update file that contains script that will be used to block direct pushes to master branch
cp /tmp/update /opt/demo.git/hooks/update
#Set directory ownership to natasha i.e. current user
echo $PASS | sudo -S chown -R natasha:natasha /usr/src/kodekloudrepos
cd /usr/src/kodekloudrepos
#Clone into directory
git clone /opt/demo.git
cd /usr/src/kodekloudrepos/demo
#Create and switch to new branch
git checkout -b xfusioncorp_demo
cp /tmp/readme.md .
#Add and commit latest activity
git add .
git commit -m "copied readme.md file from /tmp"
git push origin xfusioncorp_demo
#Create and switch to master branch
git checkout -b master
#Confirm that you are unable to push to master branch
git push origin master
=======================================================================================================================================================================================================
#Task2:
=======================================================================================================================================================================================================
#Task3:
=======================================================================================================================================================================================================
#Task4:a. Pull busybox:musl image on App Server 1 in Stratos DC and re-tag (create new tag) this image as busybox:media.
------------------------------------------------
#I noticed that you have to use elevated permission for each command.
#To pull the image
sudo docker pull busybox:musl
#To re-tag the image
sudo docker tag busybox:musl busybox:media
=======================================================================================================================================================================================================
#Task5:Create a puppet programming file official.pp under /etc/puppetlabs/code/environments/production/manifests directory on puppet master node i.e on Jump Server.
#Define a class mysql_database in puppet programming code and perform below mentioned tasks:
#Install package mariadb-server (whichever version is available by default in yum repo) on puppet agent node i.e on DB Server also start its service.
#Create a database kodekloud_db2 , a database userkodekloud_sam and set passwordB4zNgHA7Ya for this new user also remember host should be localhost.
#Finally grant some usual permissions like select, update (or full) ect to this newly created user on newly created database.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
#In this task, the jump server serves as the puppet master while the dbserver is a puppet agent. On the puppet master server, create the official.pp file first
sudo touch /etc/puppetlabs/code/environments/production/manifests/official.pp #The file name is different for different questions.
#Paste the puppet code to carry out the task inside the file and save. The code can be found in: https://github.com/DevopGroupstudy/Kodekloud_engineer_related_tasks/blob/main/mariadb.pp
#Go through the manifest and change question specifics like database name, username and password.
#Now go to the puppet agent and run;
sudo puppet agent -t
#The manifest should run on the agent and carry out the task.
=======================================================================================================================================================================================================
#Task6:
=======================================================================================================================================================================================================
#Task7:
=======================================================================================================================================================================================================
#Task8:
=======================================================================================================================================================================================================
#Task9:
=======================================================================================================================================================================================================
#Task10:
=======================================================================================================================================================================================================
#Task11:
=======================================================================================================================================================================================================
#Task12:
=======================================================================================================================================================================================================
#Task13:
=======================================================================================================================================================================================================
#Task14:
=======================================================================================================================================================================================================
#Task15:
=======================================================================================================================================================================================================
#Task16:
=======================================================================================================================================================================================================
#Task17:
